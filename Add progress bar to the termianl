from flask import Flask, render_template, request, redirect, url_for, flash, send_from_directory
import pandas as pd
import requests
import requests.exceptions
from werkzeug.utils import secure_filename
import os
import random
from fake_useragent import UserAgent
from tqdm import tqdm

app = Flask("Test101")
app.config['UPLOAD_FOLDER'] = './'

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ['xlsx', 'xls']

@app.route('/', methods = ['GET', 'POST'])
def myform():
    if request.method == 'POST':
        if 'x' not in request.files:
            flash('No file part')
            return redirect(request.url)
        file = request.files['x']
        if file.filename == '':
            flash('No selected file')
            return redirect(request.url)
        if file and allowed_file(file.filename):
            filename = secure_filename(file.filename)
            file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
            df = pd.read_excel(os.path.join(app.config['UPLOAD_FOLDER'], filename))
            responsess = []
            mail_validation = []
            ua = UserAgent()

        headers = {'User-Agent': ua.random}
        for i in tqdm(range(len(df))):
            email = df['DirectEmail'][i]
            link = df['Source'][i]
            try:
                response = requests.get(link, headers=headers)
                responsess.append(response)
                if email in response.text:
                    mail_validation.append(1)
                else:
                    mail_validation.append(0)
            except requests.exceptions.RequestException:
                responsess.append("Request Error")
                mail_validation.append(-1)
        
        df["valid_email"] = mail_validation
        df["Response_Type"] = responsess
        filename1 = 'Outputfile.xlsx'
        df.to_excel(filename1)
        return render_template('output.html')
    return render_template('index.html')

@app.route('/download')
def download_file():
     return send_from_directory(app.config['UPLOAD_FOLDER'], 'Outputfile.xlsx', as_attachment=True)

app.run(port=1234, debug=True) 
